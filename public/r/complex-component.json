{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "complex-component",
  "type": "registry:component",
  "title": "Complex Component",
  "description": "A complex component showing hooks, libs and components.",
  "registryDependencies": [
    "card"
  ],
  "files": [
    {
      "path": "registry/new-york/complex-component/page.tsx",
      "content": "import { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Input } from \"@/components/ui/input\";\nimport {\n  Search,\n  DollarSign,\n  TrendingUp,\n  CreditCard,\n  Users,\n  Menu,\n  Home,\n  FileText,\n  BarChart2,\n  Settings,\n  Bell,\n  HelpCircle,\n  ChevronDown,\n  Plus,\n  Calendar,\n  Receipt,\n  Wallet,\n  PieChart,\n  ArrowUpRight,\n  ArrowDownRight,\n} from \"lucide-react\";\n\n// Mock data for demonstration\nconst financialData = {\n  totalRevenue: 125000,\n  totalExpenses: 45000,\n  outstandingInvoices: 15000,\n  activeCustomers: 45,\n  recentTransactions: [\n    {\n      id: 1,\n      type: \"Invoice\",\n      amount: 2500,\n      date: \"2024-03-15\",\n      status: \"Paid\",\n      customer: \"Acme Corp\",\n    },\n    {\n      id: 2,\n      type: \"Expense\",\n      amount: -850,\n      date: \"2024-03-14\",\n      status: \"Completed\",\n      category: \"Office Supplies\",\n    },\n    {\n      id: 3,\n      type: \"Invoice\",\n      amount: 1800,\n      date: \"2024-03-13\",\n      status: \"Pending\",\n      customer: \"TechStart Inc\",\n    },\n    {\n      id: 4,\n      type: \"Expense\",\n      amount: -1200,\n      date: \"2024-03-12\",\n      status: \"Completed\",\n      category: \"Software\",\n    },\n  ],\n  upcomingPayments: [\n    {\n      id: 1,\n      type: \"Invoice\",\n      amount: 3200,\n      dueDate: \"2024-03-20\",\n      customer: \"Global Services\",\n    },\n    {\n      id: 2,\n      type: \"Bill\",\n      amount: -1500,\n      dueDate: \"2024-03-22\",\n      vendor: \"Cloud Hosting\",\n    },\n  ],\n  accountBalances: [\n    { name: \"Checking\", balance: 45600, type: \"bank\" },\n    { name: \"Savings\", balance: 125000, type: \"bank\" },\n    { name: \"Credit Card\", balance: -2500, type: \"credit\" },\n  ],\n};\n\nexport default function Page() {\n  return (\n    <div className=\"min-h-screen bg-[#f6f8fa] w-full\">\n      {/* Top Navigation Bar */}\n      <nav className=\"border-b bg-white shadow-sm\">\n        <div className=\"w-full px-4\">\n          <div className=\"flex h-12 items-center justify-between\">\n            <div className=\"flex items-center h-12 gap-x-1\">\n              <Menu className=\"h-5 w-5 text-gray-500\" />\n              <div className=\"ml-3 flex items-center gap-x-2 h-12\">\n                <h1 className=\"text-lg font-bold leading-none\">QuickBooks</h1>\n                <div className=\"flex items-center gap-x-1 text-xs text-gray-500 h-12\">\n                  <span className=\"leading-none\">My Company</span>\n                  <ChevronDown className=\"h-3 w-3\" />\n                </div>\n              </div>\n            </div>\n            <div className=\"flex items-center gap-x-qb-md h-12\">\n              <div className=\"relative flex items-center h-8\">\n                <Search className=\"absolute left-2 top-1/2 h-4 w-4 -translate-y-1/2 text-gray-400\" />\n                <Input\n                  placeholder=\"Search...\"\n                  className=\"w-40 pl-8 py-1 text-sm rounded-md border border-gray-200 h-8 align-middle\"\n                />\n              </div>\n              <button className=\"rounded-full bg-blue-600 p-1.5 text-white flex items-center h-8 w-8 justify-center ml-qb-md\">\n                <Plus className=\"h-4 w-4\" />\n              </button>\n              <div className=\"flex items-center h-8 w-8 justify-center ml-qb-md\">\n                <Bell className=\"h-5 w-5 text-gray-500\" />\n              </div>\n              <div className=\"flex items-center h-8 w-8 justify-center ml-qb-md\">\n                <HelpCircle className=\"h-5 w-5 text-gray-400\" />\n              </div>\n              <div className=\"h-8 w-8 rounded-full bg-gray-200 flex items-center justify-center ml-qb-md\" />\n            </div>\n          </div>\n        </div>\n      </nav>\n\n      <div className=\"flex min-h-screen w-full\">\n        {/* Sidebar Navigation */}\n        <aside className=\"w-[200px] border-r border-gray-200 bg-[#f8fafb] p-2 flex-shrink-0 min-h-screen\">\n          <nav className=\"flex flex-col gap-y-1 mt-2\">\n            <a\n              href=\"#\"\n              className=\"flex items-center gap-x-3 rounded-md px-3 py-2 text-gray-900 font-medium bg-white shadow-sm\"\n            >\n              <Home className=\"h-5 w-5\" />\n              <span className=\"text-[15px]\">Dashboard</span>\n            </a>\n            <a\n              href=\"#\"\n              className=\"flex items-center gap-x-3 rounded-md px-3 py-2 text-gray-700 hover:bg-white hover:shadow-sm\"\n            >\n              <FileText className=\"h-5 w-5\" />\n              <span className=\"text-[15px]\">Invoices</span>\n            </a>\n            <a\n              href=\"#\"\n              className=\"flex items-center gap-x-3 rounded-md px-3 py-2 text-gray-700 hover:bg-white hover:shadow-sm\"\n            >\n              <Receipt className=\"h-5 w-5\" />\n              <span className=\"text-[15px]\">Bills</span>\n            </a>\n            <a\n              href=\"#\"\n              className=\"flex items-center gap-x-3 rounded-md px-3 py-2 text-gray-700 hover:bg-white hover:shadow-sm\"\n            >\n              <BarChart2 className=\"h-5 w-5\" />\n              <span className=\"text-[15px]\">Reports</span>\n            </a>\n            <a\n              href=\"#\"\n              className=\"flex items-center gap-x-3 rounded-md px-3 py-2 text-gray-700 hover:bg-white hover:shadow-sm\"\n            >\n              <Calendar className=\"h-5 w-5\" />\n              <span className=\"text-[15px]\">Calendar</span>\n            </a>\n            <a\n              href=\"#\"\n              className=\"flex items-center gap-x-3 rounded-md px-3 py-2 text-gray-700 hover:bg-white hover:shadow-sm\"\n            >\n              <Wallet className=\"h-5 w-5\" />\n              <span className=\"text-[15px]\">Banking</span>\n            </a>\n            <a\n              href=\"#\"\n              className=\"flex items-center gap-x-3 rounded-md px-3 py-2 text-gray-700 hover:bg-white hover:shadow-sm\"\n            >\n              <PieChart className=\"h-5 w-5\" />\n              <span className=\"text-[15px]\">Taxes</span>\n            </a>\n            <a\n              href=\"#\"\n              className=\"flex items-center gap-x-3 rounded-md px-3 py-2 text-gray-700 hover:bg-white hover:shadow-sm\"\n            >\n              <Settings className=\"h-5 w-5\" />\n              <span className=\"text-[15px]\">Settings</span>\n            </a>\n          </nav>\n        </aside>\n\n        {/* Main Content */}\n        <main className=\"flex-1 p-6 max-w-6xl mx-auto w-full\">\n          {/* Stats Section */}\n          <div className=\"mb-6 grid gap-4 grid-cols-1 sm:grid-cols-2 lg:grid-cols-4\">\n            <Card className=\"shadow-sm rounded-lg border border-gray-200\">\n              <CardHeader className=\"flex flex-row items-center justify-between pb-1 gap-x-2\">\n                <CardTitle className=\"text-xs font-semibold text-gray-600\">\n                  Total Revenue\n                </CardTitle>\n                <DollarSign className=\"h-4 w-4 text-green-500\" />\n              </CardHeader>\n              <CardContent>\n                <div className=\"text-2xl font-bold text-gray-900\">\n                  ${financialData.totalRevenue.toLocaleString()}\n                </div>\n                <div className=\"flex items-center text-xs text-green-500 mt-1 gap-x-1\">\n                  <ArrowUpRight className=\"mr-1 h-3 w-3\" />\n                  <span>+12% from last month</span>\n                </div>\n              </CardContent>\n            </Card>\n            <Card className=\"shadow-sm rounded-lg border border-gray-200\">\n              <CardHeader className=\"flex flex-row items-center justify-between pb-1 gap-x-2\">\n                <CardTitle className=\"text-xs font-semibold text-gray-600\">\n                  Total Expenses\n                </CardTitle>\n                <TrendingUp className=\"h-4 w-4 text-red-500\" />\n              </CardHeader>\n              <CardContent>\n                <div className=\"text-2xl font-bold text-gray-900\">\n                  ${financialData.totalExpenses.toLocaleString()}\n                </div>\n                <div className=\"flex items-center text-xs text-red-500 mt-1 gap-x-1\">\n                  <ArrowDownRight className=\"mr-1 h-3 w-3\" />\n                  <span>+5% from last month</span>\n                </div>\n              </CardContent>\n            </Card>\n            <Card className=\"shadow-sm rounded-lg border border-gray-200\">\n              <CardHeader className=\"flex flex-row items-center justify-between pb-1 gap-x-2\">\n                <CardTitle className=\"text-xs font-semibold text-gray-600\">\n                  Outstanding Invoices\n                </CardTitle>\n                <CreditCard className=\"h-4 w-4 text-yellow-500\" />\n              </CardHeader>\n              <CardContent>\n                <div className=\"text-2xl font-bold text-gray-900\">\n                  ${financialData.outstandingInvoices.toLocaleString()}\n                </div>\n                <p className=\"text-xs text-gray-500 mt-1\">5 invoices pending</p>\n              </CardContent>\n            </Card>\n            <Card className=\"shadow-sm rounded-lg border border-gray-200\">\n              <CardHeader className=\"flex flex-row items-center justify-between pb-1 gap-x-2\">\n                <CardTitle className=\"text-xs font-semibold text-gray-600\">\n                  Active Customers\n                </CardTitle>\n                <Users className=\"h-4 w-4 text-blue-500\" />\n              </CardHeader>\n              <CardContent>\n                <div className=\"text-2xl font-bold text-gray-900\">\n                  {financialData.activeCustomers}\n                </div>\n                <div className=\"flex items-center text-xs text-green-500 mt-1 gap-x-1\">\n                  <ArrowUpRight className=\"mr-1 h-3 w-3\" />\n                  <span>+3 new this month</span>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n\n          <div className=\"grid gap-4 grid-cols-1 md:grid-cols-2\">\n            {/* Recent Transactions */}\n            <Card className=\"shadow-sm rounded-lg border border-gray-200\">\n              <CardHeader className=\"pb-2\">\n                <CardTitle className=\"text-sm font-semibold text-gray-700\">\n                  Recent Transactions\n                </CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"flex flex-col gap-y-2 divide-y divide-gray-100\">\n                  {financialData.recentTransactions.map((transaction) => (\n                    <div\n                      key={transaction.id}\n                      className=\"flex items-center justify-between py-2 gap-x-2\"\n                    >\n                      <div className=\"flex flex-col gap-y-0.5\">\n                        <p className=\"text-xs font-medium text-gray-700\">\n                          {transaction.type}\n                        </p>\n                        <p className=\"text-xs text-gray-400\">\n                          {transaction.customer || transaction.category}\n                        </p>\n                      </div>\n                      <div className=\"flex flex-col items-end gap-y-0.5\">\n                        <p\n                          className={`text-xs font-semibold ${\n                            transaction.amount > 0\n                              ? \"text-green-500\"\n                              : \"text-red-500\"\n                          }`}\n                        >\n                          {transaction.amount > 0 ? \"+\" : \"\"}$\n                          {Math.abs(transaction.amount).toLocaleString()}\n                        </p>\n                        <p className=\"text-xs text-gray-400\">\n                          {transaction.status}\n                        </p>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </CardContent>\n            </Card>\n\n            {/* Account Balances */}\n            <Card className=\"shadow-sm rounded-lg border border-gray-200\">\n              <CardHeader className=\"pb-2\">\n                <CardTitle className=\"text-sm font-semibold text-gray-700\">\n                  Account Balances\n                </CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"flex flex-col gap-y-2 divide-y divide-gray-100\">\n                  {financialData.accountBalances.map((account) => (\n                    <div\n                      key={account.name}\n                      className=\"flex items-center justify-between py-2 gap-x-2\"\n                    >\n                      <div className=\"flex flex-col gap-y-0.5\">\n                        <p className=\"text-xs font-medium text-gray-700\">\n                          {account.name}\n                        </p>\n                        <p className=\"text-xs text-gray-400\">{account.type}</p>\n                      </div>\n                      <div className=\"flex flex-col items-end gap-y-0.5\">\n                        <p\n                          className={`text-xs font-semibold ${\n                            account.balance >= 0\n                              ? \"text-green-500\"\n                              : \"text-red-500\"\n                          }`}\n                        >\n                          ${Math.abs(account.balance).toLocaleString()}\n                        </p>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n\n          {/* Upcoming Payments - full width below */}\n          <div className=\"mt-4\">\n            <Card className=\"shadow-sm rounded-lg border border-gray-200\">\n              <CardHeader className=\"pb-2\">\n                <CardTitle className=\"text-sm font-semibold text-gray-700\">\n                  Upcoming Payments\n                </CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"flex flex-col gap-y-2 divide-y divide-gray-100\">\n                  {financialData.upcomingPayments.map((payment) => (\n                    <div\n                      key={payment.id}\n                      className=\"flex items-center justify-between py-2 gap-x-2\"\n                    >\n                      <div className=\"flex flex-col gap-y-0.5\">\n                        <p className=\"text-xs font-medium text-gray-700\">\n                          {payment.type}\n                        </p>\n                        <p className=\"text-xs text-gray-400\">\n                          {payment.customer || payment.vendor}\n                        </p>\n                      </div>\n                      <div className=\"flex flex-col items-end gap-y-0.5\">\n                        <p\n                          className={`text-xs font-semibold ${\n                            payment.amount > 0\n                              ? \"text-green-500\"\n                              : \"text-red-500\"\n                          }`}\n                        >\n                          {payment.amount > 0 ? \"+\" : \"\"}$\n                          {Math.abs(payment.amount).toLocaleString()}\n                        </p>\n                        <p className=\"text-xs text-gray-400\">\n                          Due {payment.dueDate}\n                        </p>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        </main>\n      </div>\n    </div>\n  );\n}\n",
      "type": "registry:page",
      "target": "app/pokemon/page.tsx"
    },
    {
      "path": "registry/new-york/complex-component/components/pokemon-card.tsx",
      "content": "import { cache } from \"react\";\nimport { getPokemon } from \"@/registry/new-york/complex-component/lib/pokemon\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { PokemonImage } from \"@/registry/new-york/complex-component/components/pokemon-image\";\nimport { Progress } from \"@/components/ui/progress\";\n\nconst cachedGetPokemon = cache(getPokemon);\n\nexport async function PokemonCard({ name }: { name: string }) {\n  const pokemon = await cachedGetPokemon(name);\n\n  if (!pokemon) {\n    return null;\n  }\n\n  const stats = pokemon.stats.reduce((acc, stat) => {\n    acc[stat.stat.name] = stat.base_stat;\n    return acc;\n  }, {} as Record<string, number>);\n\n  return (\n    <Card className=\"overflow-hidden\">\n      <CardHeader className=\"p-4 pb-2\">\n        <CardTitle className=\"text-lg font-semibold capitalize\">\n          {pokemon.name}\n        </CardTitle>\n        <div className=\"text-sm text-gray-500\">\n          #{pokemon.id.toString().padStart(3, \"0\")}\n        </div>\n      </CardHeader>\n      <CardContent className=\"p-4 pt-2\">\n        <div className=\"mb-4 flex justify-center\">\n          <div className=\"h-32 w-32\">\n            <PokemonImage name={pokemon.name} number={pokemon.id} />\n          </div>\n        </div>\n        <div className=\"space-y-2\">\n          <div className=\"space-y-1\">\n            <div className=\"flex justify-between text-sm\">\n              <span className=\"text-gray-500\">HP</span>\n              <span className=\"font-medium\">{stats.hp}</span>\n            </div>\n            <Progress value={(stats.hp / 255) * 100} className=\"h-2\" />\n          </div>\n          <div className=\"space-y-1\">\n            <div className=\"flex justify-between text-sm\">\n              <span className=\"text-gray-500\">Attack</span>\n              <span className=\"font-medium\">{stats.attack}</span>\n            </div>\n            <Progress value={(stats.attack / 255) * 100} className=\"h-2\" />\n          </div>\n          <div className=\"space-y-1\">\n            <div className=\"flex justify-between text-sm\">\n              <span className=\"text-gray-500\">Defense</span>\n              <span className=\"font-medium\">{stats.defense}</span>\n            </div>\n            <Progress value={(stats.defense / 255) * 100} className=\"h-2\" />\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n",
      "type": "registry:component"
    },
    {
      "path": "registry/new-york/complex-component/components/pokemon-image.tsx",
      "content": "\"use client\"\n\n/* eslint-disable @next/next/no-img-element */\nimport { usePokemonImage } from \"@/registry/new-york/complex-component/hooks/use-pokemon\"\n\nexport function PokemonImage({\n  name,\n  number,\n}: {\n  name: string\n  number: number\n}) {\n  const imageUrl = usePokemonImage(number)\n\n  if (!imageUrl) {\n    return null\n  }\n\n  return <img src={imageUrl} alt={name} />\n}\n",
      "type": "registry:component"
    },
    {
      "path": "registry/new-york/complex-component/lib/pokemon.ts",
      "content": "import { z } from \"zod\"\n\nexport async function getPokemonList({ limit = 10 }: { limit?: number }) {\n  try {\n    const response = await fetch(\n      `https://pokeapi.co/api/v2/pokemon?limit=${limit}`\n    )\n    return z\n      .object({\n        results: z.array(z.object({ name: z.string() })),\n      })\n      .parse(await response.json())\n  } catch (error) {\n    console.error(error)\n    return null\n  }\n}\n\nexport async function getPokemon(name: string) {\n  try {\n    const response = await fetch(`https://pokeapi.co/api/v2/pokemon/${name}`)\n\n    if (!response.ok) {\n      throw new Error(\"Failed to fetch pokemon\")\n    }\n\n    return z\n      .object({\n        name: z.string(),\n        id: z.number(),\n        sprites: z.object({\n          front_default: z.string(),\n        }),\n        stats: z.array(\n          z.object({\n            base_stat: z.number(),\n            stat: z.object({\n              name: z.string(),\n            }),\n          })\n        ),\n      })\n      .parse(await response.json())\n  } catch (error) {\n    console.error(error)\n    return null\n  }\n}\n",
      "type": "registry:lib"
    },
    {
      "path": "registry/new-york/complex-component/hooks/use-pokemon.ts",
      "content": "\"use client\"\n\n// Totally unnecessary hook, but it's a good example of how to use a hook in a custom registry.\n\nexport function usePokemonImage(number: number) {\n  return `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${number}.png`\n}\n",
      "type": "registry:hook"
    }
  ]
}